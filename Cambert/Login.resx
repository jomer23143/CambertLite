<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>